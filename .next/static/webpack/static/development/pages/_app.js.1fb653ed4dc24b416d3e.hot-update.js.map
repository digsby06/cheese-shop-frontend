{"version":3,"file":"static/webpack/static/development/pages/_app.js.1fb653ed4dc24b416d3e.hot-update.js","sources":["webpack:///./store.js"],"sourcesContent":["import { observable, computed } from \"mobx\"\nimport { onError } from \"mobx-react\"\n\nclass Store {\n    @observable products = [];\n    @observable cart = [];\n\n    @computed get allProducts() {\n        return this.products;\n    }\n\n    @computed get productsInCart() {\n        return this.cart;\n    }\n\n    @computed get cartAmount() {\n        const amount = this.cart\n            .map(item => item.quantity)\n            .reduce(prev, curr => prev + curr)\n\n        console.log('Le amount', amount);\n\n        return amount\n    }\n\n    setProducts(array) {\n        this.products = array || [];\n    }\n\n    checkIfItemExists() {\n\n    }\n\n    updateOrder() {\n\n    }\n\n    persistCart(cart) {\n        console.log(cart);\n        this.cart = cart;\n    }\n\n    // add a single obj\n    addToCart(item, quantity) {\n        this.cart.push({\n            id: item.id,\n            quantity\n        })\n\n    }\n}\n\n// log mobx errors\nonError(error => {\n    console.log(error)\n});\n\n// export singleton store\nexport const store = new Store();\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;;;;;;;;;;;;;AAsBA;AACA;AACA;;;AAEA;;;AAIA;;;AAIA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAFA;AAKA;;;AA1CA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;;;;AAnBA;;;;;AAAA;;AACA;;;;;AAAA;;AAEA;AACA;AA6CA;AACA;AACA;AACA;AAEA;;;;A","sourceRoot":""}